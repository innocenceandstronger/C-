#include<stdio.h>
#include<stdlib.h>
int amount=0,Board[100][100];
void Cover(int tr,int tc,int dr,int dc,int size)
{
	int s,t;
	if(size<2) return;
	amount=amount+1;
	t=amount;
	s=size/2;
	if(dr<tr+s&&dc<tc+s)
	{
		Cover(tr,tc,dr,dc,s);
		Board[tr+s-1][tc+s]=t;
		Board[tr+s][tc+s-1]=t;
		Board[tr+s][tc+s]=t;
		Cover(tr,tc+s,tr+s-1,tc+s,s);
		Cover(tr+s,tc,tr+s,tc+s-1,s);
		Cover(tr+s,tc+s,tr+s,tc+s,s);
	}
	else if(dr<tr+s&&dc>=tc+s)
	{
		Cover(tr,tc+s,dr,dc,s);
		Board[tr+s-1][tc+s-1]=t;
		Board[tr+s][tc+s-1]=t;
		Board[tr+s][tc+s]=t;
		Cover(tr,tc,tr+s-1,tc+s-1,s);
		Cover(tr+s,tc,tr+s,tc+s-1,s);
		Cover(tr+s,tc+s,tr+s,tc+s,s);
	}
	else if(dr>=tr+s&&dc<tc+s)
	{
		Cover(tr+s,tc,dr,dc,s);
		Board[tr+s-1][tc+s-1]=t;
		Board[tr+s-1][tc+s]=t;
		Board[tr+s][tc+s]=t;
		Cover(tr,tc,tr+s-1,tc+s-1,s);
		Cover(tr,tc+s,tr+s-1,tc+s,s);
		Cover(tr+s,tc+s,tr+s,tc+s,s);
	}
	else if(dr>=tr+s&&dc>=tc+s)
	{
		Cover(tr+s,tc+s,dr,dc,s);
		Board[tr+s-1][tc+s-1]=t;
		Board[tr+s-1][tc+s]=t;
		Board[tr+s][tc+s-1]=t;
		Cover(tr,tc,tr+s-1,tc+s-1,s);
		Cover(tr,tc+s,tr+s-1,tc+s,s);
		Cover(tr+s,tc,tr+s,tc+s-1,s);
	}
}
void OutputBoard(int size)
{
	int i=0;
	int j=0;
	for(;i<size;i=i+1)
		for(;j<size;j=j+1){
			printf("%d",Board[i][j]);
			printf("\n");
		}
}
void main()
{
	int size=1,x,y,i,j,k;
	scanf("%d",&k);
	printf("\n");
	for(i=1;i<=k;i=i+1) size=size*2;
	printf("input incomplete pane\n");
	scanf("%d %d",&x,&y);
	Cover(0,0,x,y,size);
	OutputBoard(size);
}

		
